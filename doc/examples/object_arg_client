#!/usr/bin/env python3

from twisted.internet import reactor

from txdbus import client

def onReply( rep ):
    print 'Remote method call result: ', rep
                
def onFailed(err):
    print 'Failed: ', err.getErrorMessage()


dc = client.connect(reactor)

dc.addCallback(lambda cli: cli.getRemoteObject( 'org.example',
                                                '/MyObjPath' ))

class DBSerializeable(object):
    dbusOrder = ['text', 'number']
    def __init__(self, txt, num):
        self.text   = txt
        self.number = num

serialObj = DBSerializeable( 'Foobar', 1 )

dc.addCallback( lambda ro: ro.callRemote('exampleMethod',
                                         serialObj))
dc.addCallbacks(onReply, onFailed)
dc.addBoth( lambda _: reactor.stop() )

reactor.run()
