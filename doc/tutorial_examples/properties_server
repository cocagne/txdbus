#!/usr/bin/env python3

from twisted.internet import reactor, defer

from txdbus           import client, objects, error
from txdbus.interface import DBusInterface, Property
from txdbus.objects   import DBusProperty


class MyObj (objects.DBusObject):

    iface = DBusInterface('org.example.MyIFace',
                          Property('foo', 's', writeable=True))

    dbusInterfaces = [iface]

    foo = DBusProperty('foo')
    
    def __init__(self, objectPath):
        super(MyObj, self).__init__(objectPath)

        self.foo = 'bar'


@defer.inlineCallbacks
def main():
    try:
        conn = yield client.connect(reactor)

        conn.exportObject( MyObj('/MyObjPath') )

        yield conn.requestBusName('org.example')

        print 'Object exported on bus name "org.example" with path /MyObjPath'

    except error.DBusException, e:
        print 'Failed to export object: ', e
        reactor.stop()
        
    
reactor.callWhenRunning( main )
reactor.run()

